// <auto-generated />
using System;
using GridTariffApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GridTariffApi.Migrations.ElviaDbContext_Migrations
{
    [DbContext(typeof(ElviaDbContext))]
    partial class ElviaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GridTariffApi.Model.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrgNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Company_OrgNumber")
                        .HasFilter("[OrgNumber] IS NOT NULL");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("GridTariffApi.Model.MeteringPointTariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("LastUpdatedUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MeteringPointId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TariffKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("MeteringPointId")
                        .IsUnique()
                        .HasDatabaseName("IX_MeteringPointTariff_MeteringPointId")
                        .HasFilter("[MeteringPointId] IS NOT NULL");

                    b.ToTable("MeteringPointTariff");
                });

            modelBuilder.Entity("GridTariffApi.Model.PriceStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("JsonPayload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastUpdatedUtc")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("PriceStructure");
                });

            modelBuilder.Entity("GridTariffApi.Model.SyncStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("LastUpdatedUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Table")
                        .IsUnique()
                        .HasDatabaseName("IX_SyncStatus_Table")
                        .HasFilter("[Table] IS NOT NULL");

                    b.ToTable("SyncStatus");
                });

            modelBuilder.Entity("GridTariffApi.Model.MeteringPointTariff", b =>
                {
                    b.HasOne("GridTariffApi.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("GridTariffApi.Model.PriceStructure", b =>
                {
                    b.HasOne("GridTariffApi.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
