---
trigger:
  - "*"

pool:
  vmImage: "ubuntu-latest"

variables:
  containerregistry: "ContainerRegistryElvia"
  imagetag: $(Build.BuildNumber)
  name: grid-tariff-api
  namespace: kunde

resources:
  repositories:
    - repository: templates
      type: github
      name: 3lvia/core-azure-devops-templates
      endpoint: 3lvia

stages:
  - stage: Build
    jobs:
      - template: test.yaml@templates
        parameters:
          unitTestProjects: |
            **/*Tests/*.csproj
            !**/*IntegrationTests/*.csproj
            !**/*SmokeTests/*.csproj
          sonarcloudProjectName: "3lvia_kunde-tariff-api"
      - template: build.yaml@templates
        parameters:
          dockerfile: Dockerfile

  - stage: DeployDev
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/trunk'), true)
    dependsOn: Build
    jobs:
      - template: deploy.yaml@templates
        displayName: DeployApiDev
        parameters:
          environment: dev
          helmValuesFile: values-api.yaml
      - template: deploy.yaml@templates
        displayName: DeploySynchronizerDev
        parameters:
          environment: dev
          helmValuesFile: values-synchronizer.yaml

  - stage: DeployTest
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/trunk'), true)
    dependsOn: DeployDev
    jobs:
      - template: deploy.yaml@templates
        displayName: DeployApiTest
        parameters:
          environment: test
          helmValuesFile: values-api.yaml
      - template: deploy.yaml@templates
        displayName: DeploySynchronizerTest
        parameters:
          environment: test
          helmValuesFile: values-synchronizer.yaml

  - stage: RegisterAzureApiManagementTest
    dependsOn: DeployTest
    jobs:
    - job: RegisterAzureApiManagementTest
      pool:
        vmImage: "windows-latest"
      steps:
        - task: stephane-eyskens.apim.apimcreateorupdateproduct.apimcreateorupdateproduct@3
          displayName: 'API Management - Create/Update Product '
          inputs:
            ConnectedServiceNameARM: ApiManagementRGTest
            ResourceGroupName: 'API-RGtest'
            ApiPortalName: elviatest
            product: 'grid-tariff'
            DisplayName: 'Grid Tariff'
            subscriptionRequired: true
            approvalRequired: false
            state: true
            groups: |
                Administrators
                Developers
                Guests
        - task: stephane-eyskens.apim.apim.apim@3
          displayName: 'API Management - Create/Update API '
          inputs:
            ConnectedServiceNameARM: ApiManagementRGTest
            ResourceGroupName: 'API-RGtest'
            ApiPortalName: elviatest
            UseProductCreatedByPreviousTask: true
            OpenAPISpec: v3
            swaggerlocation: 'https://grid-tariff-api.test-elvia.io/swagger/v1/swagger.json'
            targetapi: gridtariffapi
            DisplayName: GridTariffApi
            pathapi: 'grid-tariff'
            TemplateSelector: Custom
            Custom: |
             <policies>
                 <inbound>
                     <base />
                     <authentication-basic username="$(grid-tariff-api-username-test)" password="$(grid-tariff-api-password-test)" />
                     <rate-limit-by-key calls="33" renewal-period="300"
                     increment-condition="@((context.Response.StatusCode &gt;= 200))"
                     counter-key="@(context.Subscription.Key)" />					  
                 </inbound>
                 <backend>
                     <base />
                 </backend>
                 <outbound>
                     <base />
                 </outbound>
                 <on-error>
                     <base />
                    <choose>
                        <when condition='@(context.Response.StatusCode == 401)'>
                            <choose>
                                    <when condition='@(!context.Request.Headers.ContainsKey("X-API-Key"))'>
                                       <choose>
                                            <when condition='@(context.Request.Headers.ContainsKey("OCP-APIM-Subscription-Key"))'>
                                                <send-request mode="copy" response-variable-name="response">
                                                    <set-url>@{
                                                        var urlParts = context.Request.OriginalUrl.ToString().Split('/');
                                                        urlParts[2] = "127.0.0.1";
                                                        return string.Join("/", urlParts);
                                                    }</set-url>
                                                    <set-header name="Host">
                                                        <value>@(context.Request.OriginalUrl.Host)</value>
                                                    </set-header>
                                                    <set-header name="X-API-Key">
                                                        <value>@(context.Request.Headers.GetValueOrDefault("OCP-APIM-Subscription-Key"))</value>
                                                    </set-header>
                                                    <set-header name="Accept">
                                                        <value>@(context.Request.Headers.GetValueOrDefault("Accept"))</value>
                                                    </set-header>
                                                    <set-header name="Content-Type">
                                                        <value>@(context.Request.Headers.GetValueOrDefault("Content-Type"))</value>
                                                    </set-header>
                                                </send-request>
                                                <return-response response-variable-name="response" />
                                                </when>
                                        </choose>
                                    </when>
                            </choose>
                        </when>
                    </choose>
                 </on-error>
             </policies>
            MicrosoftApiManagementAPIVersion: '2018-01-01'

  - stage: DeployProd
    dependsOn: RegisterAzureApiManagementTest
    jobs:
     - template: deploy.yaml@templates
       displayName: DeployApiProd
       parameters:
         environment: prod
         helmValuesFile: values-api.yaml
     - template: deploy.yaml@templates
       displayName: DeploySynchronizerProd
       parameters:
         environment: prod
         helmValuesFile: values-synchronizer.yaml

  - stage: RegisterAzureApiManagementProd
    dependsOn: DeployProd
    jobs:
    - job: RegisterAzureApiManagementProd
      pool:
        vmImage: "windows-latest"
      steps:
        - task: stephane-eyskens.apim.apimcreateorupdateproduct.apimcreateorupdateproduct@3
          displayName: 'API Management - Create/Update Product '
          inputs:
            ConnectedServiceNameARM: ApiManagementRGProd
            ResourceGroupName: 'API-RGprod'
            ApiPortalName: elvia
            product: 'grid-tariff'
            DisplayName: 'Grid Tariff'
            subscriptionRequired: true
            approvalRequired: false
            state: true
            groups: |
                Administrators
                Developers
                Guests
        - task: stephane-eyskens.apim.apim.apim@3
          displayName: 'API Management - Create/Update API '
          inputs:
            ConnectedServiceNameARM: ApiManagementRGProd
            ResourceGroupName: 'API-RGprod'
            ApiPortalName: elvia
            UseProductCreatedByPreviousTask: true
            OpenAPISpec: v3
            swaggerlocation: 'https://grid-tariff-api.elvia.io/swagger/v1/swagger.json'
            targetapi: gridtariffapi
            DisplayName: GridTariffApi
            pathapi: 'grid-tariff'
            TemplateSelector: Custom
            Custom: |
             <policies>
                 <inbound>
                     <base />
                     <authentication-basic username="$(grid-tariff-api-username-prod)" password="$(grid-tariff-api-password-prod)" />
                     <rate-limit-by-key calls="33" renewal-period="300"
                     increment-condition="@((context.Response.StatusCode &gt;= 200))"
                     counter-key="@(context.Subscription.Key)" />					  
                 </inbound>
                 <backend>
                     <base />
                 </backend>
                 <outbound>
                     <base />
                 </outbound>
                 <on-error>
                     <base />
                    <choose>
                        <when condition='@(context.Response.StatusCode == 401)'>
                            <choose>
                                    <when condition='@(!context.Request.Headers.ContainsKey("X-API-Key"))'>
                                       <choose>
                                            <when condition='@(context.Request.Headers.ContainsKey("OCP-APIM-Subscription-Key"))'>
                                                <send-request mode="copy" response-variable-name="response">
                                                    <set-url>@{
                                                        var urlParts = context.Request.OriginalUrl.ToString().Split('/');
                                                        urlParts[2] = "127.0.0.1";
                                                        return string.Join("/", urlParts);
                                                    }</set-url>
                                                    <set-header name="Host">
                                                        <value>@(context.Request.OriginalUrl.Host)</value>
                                                    </set-header>
                                                    <set-header name="X-API-Key">
                                                        <value>@(context.Request.Headers.GetValueOrDefault("OCP-APIM-Subscription-Key"))</value>
                                                    </set-header>
                                                      <set-header name="Accept">
                                                        <value>@(context.Request.Headers.GetValueOrDefault("Accept"))</value>
                                                    </set-header>
                                                    <set-header name="Content-Type">
                                                        <value>@(context.Request.Headers.GetValueOrDefault("Content-Type"))</value>
                                                    </set-header>
                                                </send-request>
                                                <return-response response-variable-name="response" />
                                                </when>
                                        </choose>

                                    </when>
                            </choose>
                        </when>
                    </choose>
                 </on-error>
             </policies>
            MicrosoftApiManagementAPIVersion: '2018-01-01'
